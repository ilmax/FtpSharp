name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install GitVersion
        uses: GitTools/actions/gitversion/setup@v3
        with:
          versionSpec: '5.x'
      - name: Determine Version
        id: gitversion
        uses: GitTools/actions/gitversion/execute@v3
        with:
          useConfigFile: true
      - name: Echo version
        run: echo "SemVer=${{ steps.gitversion.outputs.semVer }}"
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
      - name: Restore
        run: dotnet restore FtpServer.sln
      - name: Build
        run: dotnet build FtpServer.sln --configuration Release --no-restore
      - name: Test with coverage
        run: dotnet test FtpServer.sln --configuration Release --no-build --collect:"XPlat Code Coverage"
      - name: Report coverage summary
        uses: danielpalme/ReportGenerator-GitHub-Action@5.3.10
        with:
          reports: 'FtpServer.Tests/TestResults/**/coverage.cobertura.xml'
          targetdir: 'coverage-report'
          reporttypes: 'TextSummary'
      - name: Enforce coverage >= 80%
        run: |
          PCT=$(grep -o 'Line coverage: [0-9]*\.[0-9]*' coverage-report/Summary.txt | awk '{print $3}')
          echo "Coverage=$PCT%"
          awk -v p="$PCT" 'BEGIN { if (p+0 < 80) exit 1 }'

  docker:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: local/ftpserver:ci
